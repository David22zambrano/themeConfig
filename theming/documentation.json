{
    "pipes": [],
    "interfaces": [
        {
            "name": "MatChip",
            "id": "interface-MatChip-6a38fb352577f7b920581d1bb32127b45cae37557fde72b589acf62752c0d6a78dd9439ee8080d5d12ac66b32f6e767c1733d8c1408faf8a2ce385e17a878387",
            "file": "src/app/components/mat-chips/mat-chips.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nexport interface MatChip{\r\n  title: String;\r\n  done: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-mat-chips',\r\n  templateUrl: './mat-chips.component.html',\r\n  styleUrls: ['./mat-chips.component.scss']\r\n})\r\nexport class MatChipsComponent {\r\n  @Input() public MatChip: MatChip | any;\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "done",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "String",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Transaction",
            "id": "interface-Transaction-59afa9e1968fd67e35f91559aee340a8546912bd68558284ce497268030a5bd079f910410502e8dbd375cb3674e87a202d9abb7f1d3e8755e5c42e4e9779d6cf",
            "file": "src/app/app.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\r\ninterface Transaction {\r\n  item: string;\r\n  cost: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  displayedColumns: string[] = ['item', 'cost'];\r\n  transactions: Transaction[] = [\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ];\r\n\r\n  /** Gets the total cost of all transactions. */\r\n  getTotalCost() {\r\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "cost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "SizeDirective",
            "id": "directive-SizeDirective-4ff67b520153b83b6f979f8af2a67002ab7fb5c9254d433c79e034e89c2d889690502d1bcf656dcd3491d635ddbf5972065866eaf27423e4862a649310dc9638",
            "file": "src/app/directivas/size.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\r\n@Directive({\r\n  selector: '[size]',\r\n})\r\nexport class SizeDirective {\r\n  constructor(private el: ElementRef) {\r\n    el.nativeElement.style.customProperty = true;\r\n  }\r\n  @Input() size: any;\r\n  ngOnChanges() {\r\n    let typeElement = this.el.nativeElement.localName;\r\n    function SetStyle(\r\n      element:{style:{height:string;paddingInline:string;fontSize:string;padding:string;width:string;};classList:{add:(arg0:string)=>void;};},\r\n              heightCase:string,fontSizeCase:string,paddingInlineCase:string,classCase:string,paddingCase:string,widthCase:string\r\n    ) {\r\n      if (heightCase) {\r\n        element.style.height = heightCase;\r\n      }\r\n      if (paddingInlineCase) {\r\n        element.style.paddingInline = paddingInlineCase;\r\n      }\r\n      if (fontSizeCase) {\r\n        element.style.fontSize = fontSizeCase;\r\n      }\r\n      if (classCase) {\r\n        element.classList.add(classCase);\r\n      }\r\n      if (paddingCase) {\r\n        element.style.padding = paddingCase;\r\n      }\r\n      if (widthCase) {\r\n        element.style.width = widthCase;\r\n      }\r\n    }\r\n    switch (this.size) {\r\n      case 'small':\r\n        if (typeElement === 'mat-chip' && 'mat-chip-option') {\r\n          SetStyle(this.el.nativeElement, '24px', '13px', '8px', 'undefined','undefined','undefined');\r\n        }if (typeElement === 'mat-chip-option') {\r\n          SetStyle(this.el.nativeElement, '24px', '13px', '8px', 'undefined','undefined','undefined');\r\n        } else if (typeElement === 'button') {\r\n          SetStyle(this.el.nativeElement, '30px', '13px', 'undefined', 'undefined','undefined','undefined');\r\n        } else if (typeElement === 'mat-form-field') {\r\n          SetStyle(this.el.nativeElement, '70px', '16px', 'undefined', 'small','undefined','undefined');\r\n        } else if (\r\n          typeElement === 'mat-checkbox' || typeElement === 'mat-slider' || typeElement === 'mat-radio-button' ||  typeElement === 'mat-spinner' || typeElement === 'table'\r\n        ) {\r\n          SetStyle(this.el.nativeElement, 'undefined','undefined', 'undefined', 'small','undefined','undefined' );\r\n        } else if (typeElement === 'mat-icon') {\r\n          SetStyle(this.el.nativeElement, 'undefined','20px', 'undefined', 'undefined','undefined','undefined' );\r\n        }\r\n        return;\r\n      case 'large':\r\n        if (typeElement === 'button') {\r\n          SetStyle(this.el.nativeElement, 'undefined', '15px', 'undefined', 'undefined', \"20px 19px\",'undefined');\r\n        } else if (typeElement === 'mat-checkbox' || typeElement === 'mat-radio-button') {\r\n          SetStyle(this.el.nativeElement, 'undefined', 'undefined', 'undefined', \"large\",'undefined','undefined');\r\n        } else if (typeElement === 'mat-icon') {\r\n          SetStyle(this.el.nativeElement, '30px', '35px', 'undefined', 'undefined', 'undefined',\"33px\");\r\n        }\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n}\r\n",
            "selector": "[size]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-59afa9e1968fd67e35f91559aee340a8546912bd68558284ce497268030a5bd079f910410502e8dbd375cb3674e87a202d9abb7f1d3e8755e5c42e4e9779d6cf",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "['item', 'cost']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "transactions",
                    "defaultValue": "[\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Transaction[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "getTotalCost",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nGets the total cost of all transactions.",
                    "description": "<p>Gets the total cost of all transactions.</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\ninterface Transaction {\r\n  item: string;\r\n  cost: number;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  displayedColumns: string[] = ['item', 'cost'];\r\n  transactions: Transaction[] = [\r\n    {item: 'Beach ball', cost: 4},\r\n    {item: 'Towel', cost: 5},\r\n    {item: 'Frisbee', cost: 2},\r\n    {item: 'Sunscreen', cost: 4},\r\n    {item: 'Cooler', cost: 25},\r\n    {item: 'Swim suit', cost: 15},\r\n  ];\r\n\r\n  /** Gets the total cost of all transactions. */\r\n  getTotalCost() {\r\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".small {\r\n  &::ng-deep {\r\n    //Form-field\r\n    .mdc-floating-label {\r\n      padding-bottom: 4px;\r\n    }\r\n    .mat-mdc-form-field-infix {\r\n      min-height: 45px;\r\n    }\r\n    // CheckBox\r\n    .mdc-checkbox__background {\r\n      width: 15px;\r\n      height: 15px;\r\n      margin: 1px 1.5px;\r\n    }\r\n    // Slider\r\n    .mat-mdc-slider-visual-thumb .mat-ripple {\r\n      border-radius: 50px;\r\n      margin: 12px 0px 0px 12px;\r\n      width: 50%;\r\n      height: 50%;\r\n    }\r\n    .mdc-slider__thumb-knob {\r\n      width: 5px;\r\n      height: 5px;\r\n      border-width: 7.5px;\r\n    }\r\n    //radio-button\r\n    .mdc-radio__background {\r\n      width: 15px;\r\n      height: 15px;\r\n    }\r\n    .mdc-radio__inner-circle {\r\n      border-width: 7px;\r\n      margin: 2.5px 1.5px;\r\n    }\r\n    .mdc-radio__outer-circle {\r\n      margin: 2.5px 1.5px;\r\n    }\r\n    .mdc-circular-progress__indeterminate-container {\r\n      width: 70px;\r\n    }\r\n    //Table\r\n    .mat-mdc-table,\r\n    .mdc-data-table__header-row,\r\n    .mat-mdc-table,\r\n    .mdc-data-table__row {\r\n      height: 30px;\r\n      font-size: 12px;\r\n    }\r\n  }\r\n}\r\n  .large {\r\n    &::ng-deep {\r\n      // Checkbox\r\n      .mdc-checkbox__background {\r\n        width: 21px;\r\n        height: 21px;\r\n        margin: -1px -1px;\r\n      }\r\n      .mdc-radio__background {\r\n        width: 23px;\r\n        height: 23px;\r\n      }\r\n      .mdc-radio__inner-circle {\r\n        border-width: 11px;\r\n        margin: -2px -1.5px;\r\n      }\r\n      .mdc-radio__outer-circle {\r\n        margin: -2px -1.5px;\r\n      }\r\n    }\r\n  }\r\n\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-toolbar></app-toolbar>\r\n<!-- <app-mat-stepper></app-mat-stepper> -->\r\n<app-mat-buttons></app-mat-buttons>\r\n<app-mat-bagde></app-mat-bagde>\r\n<app-checkbox></app-checkbox>\r\n<app-mat-chips></app-mat-chips>\r\n<app-mat-radio-buttons></app-mat-radio-buttons>\r\n<br>\r\n<app-mat-input></app-mat-input>\r\n<app-mat-spinner></app-mat-spinner>\r\n<app-mat-autocomplete></app-mat-autocomplete>\r\n<app-mat-progress-bar></app-mat-progress-bar>\r\n<app-mat-slider></app-mat-slider>\r\n<app-mat-slide-toggle></app-mat-slide-toggle>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8895097835ae12c7615b9298de037eb1ff2e2ae4f90b30746cc4ad65f996e8f9047619f9af845cdb7bbaa3307d990da345e8e2640535fb463f66460bf2fd522d",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   ngClass=\"classes\"\n   ngStyle=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 33,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    ngClass=\"classes\"\r\n    ngStyle=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n  \r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 49
                    }
                }
            }
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-ba2b7c752b99cef01dc534769b150f3970a4eebe93166fab80e9724a7ba97f2c4f95ec1ef13bf518c0f56814c2f73a1c9a8a3622ddefec3b7a027cb5e8e03a86",
            "file": "src/app/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "labelPosition",
                    "defaultValue": "'after'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"before\" | \"after\"",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent {\r\n  checked = false;\r\n  indeterminate = false;\r\n  labelPosition: 'before' | 'after' = 'after';\r\n  disabled = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n  .example-h2 {\r\n    margin: 10px;\r\n  }\r\n  \r\n  .example-section {\r\n    display: flex;\r\n    align-content: center;\r\n    align-items: center;\r\n    height: 60px;\r\n  }\r\n  \r\n  .example-margin {\r\n    margin: 0 10px;\r\n  }",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-checkbox\r\nclass=\"example-margin\"\r\n  (ngModel)=\"(checked)\"\r\n  [(indeterminate)]=\"indeterminate\"\r\n  [labelPosition]=\"labelPosition\"\r\n  [disabled]=\"disabled\"\r\n>\r\n  I'm a checkbox\r\n</mat-checkbox>\r\n\r\n\r\n"
        },
        {
            "name": "MatAutocompleteComponent",
            "id": "component-MatAutocompleteComponent-84930f1a0128097946319a8b7fd9ae3264edaabfb61ac035af0a4cc0b6587300e749107ec56964b38e0523a047d2559057daa67df0fc1b801ed2b0a04c40f0f4",
            "file": "src/app/components/mat-autocomplete/mat-autocomplete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-autocomplete",
            "styleUrls": [
                "./mat-autocomplete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-autocomplete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]> | any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "myControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "options",
                    "defaultValue": "['One', 'Two', 'Three']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-mat-autocomplete',\r\n  templateUrl: './mat-autocomplete.component.html',\r\n  styleUrls: ['./mat-autocomplete.component.scss']\r\n})\r\nexport class MatAutocompleteComponent implements OnInit{\r\n  myControl = new FormControl('');\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n  filteredOptions: Observable<string[]> | any;\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value || '')),\r\n    );\r\n  }\r\n\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-form {\r\n    min-width: 150px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n\r\n  }\r\n  \r\n  .example-full-width {\r\n    width: 100%;\r\n  }  ",
                    "styleUrl": "./mat-autocomplete.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\" >\r\n      <mat-label>Hi</mat-label>\r\n      <input type=\"text\"\r\n      \r\n             placeholder=\"Pick one\"\r\n            \r\n             matInput\r\n             formControl=\"myControl\"\r\n             [matAutocomplete]=\"auto\">\r\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" >\r\n        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n          {{option}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n  </form>"
        },
        {
            "name": "MatBagdeComponent",
            "id": "component-MatBagdeComponent-fc490305514142e6391dff3948dc83abc2298c2e4a53862adc78604809c6c1374605e7930c0a89593d2dbee06cba432f96d47eae57de3cb7fdcc820c42e9432f",
            "file": "src/app/components/mat-bagde/mat-bagde.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-bagde",
            "styleUrls": [
                "./mat-bagde.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-bagde.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-bagde',\r\n  templateUrl: './mat-bagde.component.html',\r\n  styleUrls: ['./mat-bagde.component.scss']\r\n})\r\nexport class MatBagdeComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mat-bagde.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"demo-section\">\r\n    Button with a badge on the left\r\n    <button\r\n      mat-raised-button\r\n      color=\"success\"\r\n      matBadge=\"8\"\r\n      matBadgePosition=\"before\"\r\n      matBadgeColor=\"warn\"\r\n    >\r\n      Success\r\n    </button>\r\n  </div>\r\n  <div class=\"demo-section\">\r\n    Button with a badge on the left\r\n    <button\r\n      mat-raised-button\r\n      color=\"info\"\r\n      matBadge=\"8\"\r\n      matBadgePosition=\"before\"\r\n      matBadgeColor=\"warn\"\r\n    >\r\n      Info\r\n    </button>\r\n  </div>\r\n  <div class=\"demo-section\">\r\n    Button with a badge on the left \r\n    <button\r\n      mat-raised-button\r\n      color=\"warning\"\r\n      matBadge=\"8\"\r\n      matBadgePosition=\"before\"\r\n      matBadgeColor=\"warn\"\r\n    >\r\n      Warning\r\n    </button>\r\n  </div>\r\n  <div class=\"demo-section\">\r\n    Button with a badge on the left\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      matBadge=\"8\"\r\n      matBadgePosition=\"before\"\r\n      matBadgeColor=\"warn\"\r\n    >\r\n      Primary\r\n    </button>\r\n  </div>\r\n  <div class=\"demo-section\">\r\n    Button with a badge on the left\r\n    <button\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      matBadge=\"8\"\r\n      matBadgePosition=\"before\"\r\n      matBadgeColor=\"warn\"\r\n    >\r\n      Accent\r\n    </button>\r\n  </div>\r\n  <div class=\"demo-section\">\r\n    Button with a badge on the left\r\n    <button\r\n      mat-raised-button\r\n      color=\"warn\"\r\n      matBadge=\"8\"\r\n      matBadgePosition=\"before\"\r\n      matBadgeColor=\"warn\"\r\n    >\r\n      Action\r\n    </button>\r\n  </div>\r\n  "
        },
        {
            "name": "MatButtonsComponent",
            "id": "component-MatButtonsComponent-da32649cf568a42cc46bac9d2130a22f01bf8b9401e9fd4b4bfcdfd756b20c2def7ed11fa503c4ff18dd509540adca1e90025f6c26089cdba1c243d73ea547aa",
            "file": "src/app/components/mat-buttons/mat-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-buttons",
            "styleUrls": [
                "./mat-buttons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-buttons',\r\n  templateUrl: './mat-buttons.component.html',\r\n  styleUrls: ['./mat-buttons.component.scss']\r\n})\r\nexport class MatButtonsComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n    display: table;\r\n  }\r\n  \r\n  .example-label {\r\n    display: table-cell;\r\n    font-size: 14px;\r\n    margin-left: 8px;\r\n    min-width: 120px;\r\n  }\r\n  \r\n  .example-button-row {\r\n    display: table-cell;\r\n    max-width: 600px;\r\n  }\r\n  \r\n  .example-button-row .mat-mdc-button-base {\r\n    margin: 8px 8px 8px 0;\r\n  }\r\n  \r\n  .example-flex-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .example-button-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 120px;\r\n  }",
                    "styleUrl": "./mat-buttons.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section>\r\n    <div class=\"example-label\">Basic</div>\r\n    <div class=\"example-button-row\">\r\n      <button mat-button color=\"success\">Success</button>\r\n      <button mat-button color=\"warning\">Warning</button>\r\n      <button mat-button color=\"info\">Info</button>\r\n      <button mat-button color=\"primary\">Primary</button>\r\n      <button mat-button color=\"accent\">Accent</button>\r\n      <button mat-button color=\"warn\">Warn</button>\r\n      <button mat-button disabled>Disabled</button>\r\n      <a mat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div class=\"example-label\">Raised</div>\r\n    <div class=\"example-button-row\">\r\n      <button mat-raised-button>Basic</button>\r\n      <button mat-raised-button color=\"success\">Success</button>\r\n      <button mat-raised-button color=\"warning\">Warning</button>\r\n      <button mat-raised-button color=\"info\">Info</button>\r\n      <button mat-raised-button color=\"primary\">Primary</button>\r\n      <button mat-raised-button color=\"accent\">Accent</button>\r\n      <button mat-raised-button color=\"warn\">Warn</button>\r\n      <button mat-raised-button disabled>Disabled</button>\r\n      <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div class=\"example-label\">Stroked</div>\r\n    <div class=\"example-button-row\">\r\n      <button mat-stroked-button color=\"success\">success</button>\r\n      <button mat-stroked-button color=\"warning\">Warning</button>\r\n      <button mat-stroked-button color=\"info\">Info</button>\r\n      <button mat-stroked-button color=\"primary\">Primary</button>\r\n      <button mat-stroked-button color=\"accent\">Accent</button>\r\n      <button mat-stroked-button color=\"warn\">Warn</button>\r\n      <button mat-stroked-button disabled>Disabled</button>\r\n      <a mat-stroked-button href=\"https://www.google.com/\" target=\"_blank\"\r\n        >Link</a\r\n      >\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div class=\"example-label\">Flat</div>\r\n    <div class=\"example-button-row\">\r\n      <button mat-flat-button color=\"success\">success</button>\r\n      <button mat-flat-button color=\"info\">Info</button>\r\n      <button mat-flat-button color=\"warning\">Warning</button>\r\n      <button mat-flat-button color=\"primary\">Accent</button>\r\n      <button mat-flat-button color=\"accent\">Accent</button>\r\n      <button mat-flat-button color=\"warn\">Warn</button>\r\n      <button mat-flat-button disabled>Disabled</button>\r\n      <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div class=\"example-label\">Icon</div>\r\n    <div class=\"example-button-row\">\r\n      <div class=\"example-flex-container\">\r\n        <button\r\n          mat-icon-button\r\n          color=\"success\"\r\n          aria-label=\"Example icon button with a vertical three dot icon\"\r\n        >\r\n          <mat-icon>home</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          color=\"info\"\r\n          aria-label=\"Example icon button with a home icon\"\r\n        >\r\n          <mat-icon>home</mat-icon>\r\n        </button>\r\n        <button\r\n        mat-icon-button\r\n        color=\"warning\"\r\n        aria-label=\"Example icon button with a home icon\"\r\n      >\r\n        <mat-icon>home</mat-icon>\r\n      </button>\r\n        <button\r\n          mat-icon-button\r\n          color=\"primary\"\r\n          aria-label=\"Example icon button with a menu icon\"\r\n        >\r\n          <mat-icon >favorite</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          color=\"accent\"\r\n          aria-label=\"Example icon button with a heart icon\"\r\n        >\r\n          <mat-icon >favorite</mat-icon>\r\n        </button>\r\n        <button\r\n          mat-icon-button\r\n          color=\"warn\"\r\n          aria-label=\"Example icon button with a open in new tab icon\"\r\n        >\r\n          <mat-icon>favorite</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div class=\"example-label\">FAB</div>\r\n    <div class=\"example-button-row\">\r\n      <div class=\"example-flex-container\">\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-fab\r\n            color=\"success\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-fab\r\n            color=\"info\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-fab\r\n            color=\"warning\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-fab\r\n            color=\"primary\"\r\n            aria-label=\"Example icon button with a delete icon\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-fab\r\n            color=\"accent\"\r\n            aria-label=\"Example icon button with a bookmark icon\"\r\n          >\r\n            <mat-icon>bookmark</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-fab\r\n            color=\"warn\"\r\n            aria-label=\"Example icon button with a home icon\"\r\n          >\r\n            <mat-icon>home</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-fab\r\n            disabled\r\n            aria-label=\"Example icon button with a heart icon\"\r\n          >\r\n            <mat-icon>favorite</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div class=\"example-label\">Mini FAB</div>\r\n    <div class=\"example-button-row\">\r\n      <div class=\"example-flex-container\">\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-mini-fab\r\n            color=\"success\"\r\n            aria-label=\"Example icon button with a menu icon\"\r\n          >\r\n            <mat-icon>menu</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-mini-fab\r\n            color=\"info\"\r\n            aria-label=\"Example icon button with a menu icon\"\r\n          >\r\n            <mat-icon>menu</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-mini-fab\r\n            color=\"warning\"\r\n            aria-label=\"Example icon button with a menu icon\"\r\n          >\r\n            <mat-icon>menu</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-mini-fab\r\n            color=\"primary\"\r\n            aria-label=\"Example icon button with a menu icon\"\r\n          >\r\n            <mat-icon>menu</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-mini-fab\r\n            color=\"accent\"\r\n            aria-label=\"Example icon button with a plus one icon\"\r\n          >\r\n            <mat-icon>plus_one</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-mini-fab\r\n            color=\"warn\"\r\n            aria-label=\"Example icon button with a filter list icon\"\r\n          >\r\n            <mat-icon>filter_list</mat-icon>\r\n          </button>\r\n        </div>\r\n        <div class=\"example-button-container\">\r\n          <button\r\n            mat-mini-fab\r\n            disabled\r\n            aria-label=\"Example icon button with a home icon\"\r\n          >\r\n            <mat-icon>home</mat-icon>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>"
        },
        {
            "name": "MatChipsComponent",
            "id": "component-MatChipsComponent-6a38fb352577f7b920581d1bb32127b45cae37557fde72b589acf62752c0d6a78dd9439ee8080d5d12ac66b32f6e767c1733d8c1408faf8a2ce385e17a878387",
            "file": "src/app/components/mat-chips/mat-chips.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-chips",
            "styleUrls": [
                "./mat-chips.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-chips.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "MatChip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "MatChip | any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nexport interface MatChip{\r\n  title: String;\r\n  done: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-mat-chips',\r\n  templateUrl: './mat-chips.component.html',\r\n  styleUrls: ['./mat-chips.component.scss']\r\n})\r\nexport class MatChipsComponent {\r\n  @Input() public MatChip: MatChip | any;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mat-chips.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-chip-listbox aria-label=\"Fish selection\">\r\n    <mat-chip-option color=\"success\">Success</mat-chip-option>\r\n    <mat-chip-option color=\"info\">Info</mat-chip-option>\r\n    <mat-chip-option color=\"warning\">Warning</mat-chip-option>\r\n    <mat-chip-option color=\"primary\">primary</mat-chip-option>\r\n    <mat-chip-option color=\"accent\" selected>Accent</mat-chip-option>\r\n    <mat-chip-option color=\"warn\" >\r\n      <img\r\n        matChipAvatar\r\n        src=\"https://material.angular.io/assets/img/examples/shiba1.jpg\"\r\n        alt=\"Photo of a Shiba Inu\"\r\n      />\r\n      Dog one\r\n    </mat-chip-option>\r\n  </mat-chip-listbox>"
        },
        {
            "name": "MatDataPickerComponent",
            "id": "component-MatDataPickerComponent-80b780a3770e25bab7f7407b64f54073dd8b3fc43957197f7023f16b112906a07dfd42b26026ed102999eafb4d92815742e6c05476c02fd2701f8825b05334ef",
            "file": "src/app/components/mat-data-picker/mat-data-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-data-picker",
            "styleUrls": [
                "./mat-data-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-data-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-data-picker',\r\n  templateUrl: './mat-data-picker.component.html',\r\n  styleUrls: ['./mat-data-picker.component.scss']\r\n})\r\nexport class MatDataPickerComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mat-data-picker.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-form-field appearance=\"fill\">\r\n    <mat-label>Enter a date range</mat-label>\r\n    <mat-date-range-input [rangePicker]=\"picker\">\r\n      <input matStartDate placeholder=\"Start date\">\r\n      <input matEndDate placeholder=\"End date\">\r\n    </mat-date-range-input>\r\n    <mat-hint>MM/DD/YYYY – MM/DD/YYYY</mat-hint>\r\n    <mat-datepicker-toggle matIconSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-date-range-picker #picker></mat-date-range-picker>\r\n  </mat-form-field>"
        },
        {
            "name": "MatInputComponent",
            "id": "component-MatInputComponent-84abbf14e2fb58017851a2e524e768fe63041fe2ed7255d18f374e7ad87ba8486c3df383dd47e2ff6dc4e3c2c40e6b1fe7b8da5b808e14a101744e9c145f37b5",
            "file": "src/app/components/mat-input/mat-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-input",
            "styleUrls": [
                "./mat-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\nimport { ErrorStateMatcher, ThemePalette } from '@angular/material/core';\r\n\r\n// export declare type ThemePalette = 'primary' | 'accent' | 'success' | undefined;\r\n@Component({\r\n  selector: 'app-mat-input',\r\n  templateUrl: './mat-input.component.html',\r\n  styleUrls: ['./mat-input.component.scss']\r\n})\r\nexport class MatInputComponent {\r\n  \r\n  // color:ThemePalette\r\n\r\n  // mostrarColor(){\r\n  //   console.log(this.color?.prim)\r\n  // }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-form {\r\n    min-width: 150px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .example-full-width {\r\n    width: 100%;\r\n  }",
                    "styleUrl": "./mat-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-form-field class=\"example-full-width\" >\r\n  <mat-label>Favorite food</mat-label>\r\n  <input matInput placeholder=\"Ex. Pizza\" value=\"Sushi\">\r\n</mat-form-field>\r\n"
        },
        {
            "name": "MatProgressBarComponent",
            "id": "component-MatProgressBarComponent-23d091b2de9ca51914a043b404e7f8ecc5c8b6e21e2be5d5dd3b355bfddfef8dee76b73f86a4cb3903e8b133522cfb1b54eae31116aab4a4427b3f5bce8a91fb",
            "file": "src/app/components/mat-progress-bar/mat-progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-progress-bar",
            "styleUrls": [
                "./mat-progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-progress-bar',\r\n  templateUrl: './mat-progress-bar.component.html',\r\n  styleUrls: ['./mat-progress-bar.component.scss']\r\n})\r\nexport class MatProgressBarComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".progress-bar-container{\r\n display: flex;\r\n flex-direction: column;\r\n\r\n}",
                    "styleUrl": "./mat-progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"progress-bar-container\">\r\n  <mat-progress-bar  color=\"success\" mode=\"indeterminate\"></mat-progress-bar>\r\n  <mat-progress-bar color=\"info\" mode=\"indeterminate\"></mat-progress-bar>\r\n  <mat-progress-bar color=\"warning\" mode=\"indeterminate\"></mat-progress-bar>\r\n  <mat-progress-bar color=\"primary\" mode=\"indeterminate\"></mat-progress-bar>\r\n  <mat-progress-bar color=\"accent\" mode=\"indeterminate\"></mat-progress-bar>\r\n  <mat-progress-bar color=\"warn\" mode=\"indeterminate\"></mat-progress-bar>\r\n</section>\r\n"
        },
        {
            "name": "MatRadioButtonsComponent",
            "id": "component-MatRadioButtonsComponent-29d19b64fb779482d2035c789b5beb2ec64d1f006f6dfe22878140cc059ed36e1dd0b46c176d0f48ea2ccba3725f157e93fc601dc18a147d0f347f2c920691bd",
            "file": "src/app/components/mat-radio-buttons/mat-radio-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-radio-buttons",
            "styleUrls": [
                "./mat-radio-buttons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-radio-buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "MAT_RADIO_DEFAULT_OPTIONS",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MAT_RADIO_DEFAULT_OPTIONS, MatRadioModule } from '@angular/material/radio';\r\n\r\n@Component({\r\n  selector: 'app-mat-radio-buttons',\r\n  templateUrl: './mat-radio-buttons.component.html',\r\n  styleUrls: ['./mat-radio-buttons.component.scss'],\r\n\r\n})\r\n\r\n\r\nexport class MatRadioButtonsComponent {\r\n  MAT_RADIO_DEFAULT_OPTIONS: any\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mat-radio-buttons.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-radio-group aria-label=\"Select an option\">\r\n    <mat-radio-button value=\"1\" >Option 1</mat-radio-button>\r\n    <mat-radio-button value=\"2\" color=\"accent\">Option 2</mat-radio-button>\r\n    <mat-radio-button value=\"2\" color=\"warn\">Option 2</mat-radio-button>\r\n  </mat-radio-group>"
        },
        {
            "name": "MatSliderComponent",
            "id": "component-MatSliderComponent-c11399d4c67d4ebca2a2081bbd0d760a040844ee7a9f1a6d039b6b00ed673142e5169e9f4e8694b0f81b419899ec70e8d5509e6ae4e14ae25a51f1a808463b6d",
            "file": "src/app/components/mat-slider/mat-slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-slider",
            "styleUrls": [
                "./mat-slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-slider',\r\n  templateUrl: './mat-slider.component.html',\r\n  styleUrls: ['./mat-slider.component.scss']\r\n})\r\nexport class MatSliderComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-slider {\r\n    width: 300px;\r\n  }",
                    "styleUrl": "./mat-slider.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-slider color=\"success\">\r\n    <input matSliderThumb>\r\n  </mat-slider>\r\n  <mat-slider color=\"info\">\r\n    <input matSliderThumb>\r\n  </mat-slider>\r\n  <mat-slider color=\"warning\">\r\n    <input matSliderThumb>\r\n  </mat-slider>\r\n  <mat-slider color=\"primary\">\r\n    <input matSliderThumb>\r\n  </mat-slider>\r\n  <mat-slider color=\"accent\">\r\n    <input matSliderThumb>\r\n  </mat-slider>\r\n  <mat-slider color=\"warn\">\r\n    <input matSliderThumb>\r\n  </mat-slider>"
        },
        {
            "name": "MatSlideToggleComponent",
            "id": "component-MatSlideToggleComponent-eb5432596717f249396878d3d0d9e1e7b3acd2e5c407a90f21b74b891fce68cdc29f8c09a0c4c6de6816b03153d79980f12b4ec78c689553884c203a8f73aca1",
            "file": "src/app/components/mat-slide-toggle/mat-slide-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-slide-toggle",
            "styleUrls": [
                "./mat-slide-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-slide-toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-slide-toggle',\r\n  templateUrl: './mat-slide-toggle.component.html',\r\n  styleUrls: ['./mat-slide-toggle.component.scss']\r\n})\r\nexport class MatSlideToggleComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mat-slide-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-slide-toggle color=\"success\">Slide me!</mat-slide-toggle>\r\n<mat-slide-toggle color=\"info\">Slide me!</mat-slide-toggle>\r\n<mat-slide-toggle color=\"warning\">Slide me!</mat-slide-toggle>\r\n<mat-slide-toggle color=\"primary\">Slide me!</mat-slide-toggle>\r\n<mat-slide-toggle color=\"accent\">Slide me!</mat-slide-toggle>\r\n<mat-slide-toggle color=\"warn\">Slide me!</mat-slide-toggle>\r\n"
        },
        {
            "name": "MatSpinnerComponent",
            "id": "component-MatSpinnerComponent-4b050c2fe1f53c6284cfc5d5def4816a5aa7845eccfee39b1bcec1a64700432d370dd496e1d0f61815c0bb53dcde544ac2c6aa40b45e377bfba6652591a976c6",
            "file": "src/app/components/mat-spinner/mat-spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-spinner",
            "styleUrls": [
                "./mat-spinner.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-spinner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-spinner',\r\n  templateUrl: './mat-spinner.component.html',\r\n  styleUrls: ['./mat-spinner.component.scss']\r\n})\r\nexport class MatSpinnerComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container-spinners{\r\n    display:  flex;\r\n    \r\n}",
                    "styleUrl": "./mat-spinner.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<section class=\"container-spinners\">\r\n    <mat-spinner color=\"success\"></mat-spinner>\r\n    <mat-spinner color=\"info\"></mat-spinner>\r\n    <mat-spinner color=\"warning\"></mat-spinner>\r\n    <mat-spinner color=\"primary\"></mat-spinner>\r\n    <mat-spinner color=\"accent\"></mat-spinner>\r\n    <mat-spinner color=\"warn\"></mat-spinner>\r\n</section>\r\n\r\n"
        },
        {
            "name": "MatStepperComponent",
            "id": "component-MatStepperComponent-2d09ef809a892aa33f1b547b6b9ebf2d5eff16de726dd83117d39613ea6979f7a22730d749df9aa98e527a6f6253497445c24aa995307426a94efd8bb9bca9b1",
            "file": "src/app/components/mat-stepper/mat-stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { showError: true },\n}"
                }
            ],
            "selector": "app-mat-stepper",
            "styleUrls": [
                "./mat-stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "firstFormGroup",
                    "defaultValue": "this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "secondFormGroup",
                    "defaultValue": "this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\r\n\r\n@Component({\r\n  selector: 'app-mat-stepper',\r\n  templateUrl: './mat-stepper.component.html',\r\n  styleUrls: ['./mat-stepper.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: STEPPER_GLOBAL_OPTIONS,\r\n      useValue: {showError: true},\r\n    },\r\n  ],\r\n})\r\nexport class MatStepperComponent {\r\n  firstFormGroup = this._formBuilder.group({\r\n    firstCtrl: ['', Validators.required],\r\n  });\r\n  secondFormGroup = this._formBuilder.group({\r\n    secondCtrl: ['', Validators.required],\r\n  });\r\n  constructor(private _formBuilder: FormBuilder) {}\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mat-stepper.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-stepper #stepper>\r\n    <mat-step [stepControl]=\"firstFormGroup\" errorMessage=\"Name is required.\">\r\n      <form formGroup=\"firstFormGroup\">\r\n        <ng-template matStepLabel>Fill out your name</ng-template>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Name</mat-label>\r\n          <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n        </mat-form-field>\r\n        <div>\r\n          <p>Go to a different step to see the error state</p>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"secondFormGroup\" errorMessage=\"Address is required.\">\r\n      <form formGroup=\"secondFormGroup\">\r\n        <ng-template matStepLabel>Fill out your address</ng-template>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Address</mat-label>\r\n          <input matInput placeholder=\"Ex. 1 Main St, New York, NY\" formControlName=\"secondCtrl\"\r\n                 required>\r\n        </mat-form-field>\r\n        <div>\r\n          <p>Go to a different step to see the error state</p>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n    <mat-step>\r\n      <ng-template matStepLabel>Done</ng-template>\r\n      <p>You are now done.</p>\r\n      <div>\r\n        <button mat-button matStepperPrevious>Back</button>\r\n        <button mat-button (click)=\"stepper.reset()\">Reset</button>\r\n      </div>\r\n    </mat-step>\r\n  </mat-stepper>"
        },
        {
            "name": "MatTabsComponent",
            "id": "component-MatTabsComponent-26baf5a87fc367799933fcdf3905b303ab347d11dbe22af361aba85dfa5f48ce2d4ed3e15bc26d08d9f71ffba73e52f0d2c3b61dd9bf302f1be43c141ea739bb",
            "file": "src/app/components/mat-tabs/mat-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mat-tabs",
            "styleUrls": [
                "./mat-tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mat-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mat-tabs',\r\n  templateUrl: './mat-tabs.component.html',\r\n  styleUrls: ['./mat-tabs.component.scss']\r\n})\r\nexport class MatTabsComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./mat-tabs.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p>mat-tabs works!</p>\r\n"
        },
        {
            "name": "ToolbarComponent",
            "id": "component-ToolbarComponent-7e2d3de34d1994388ffcac3e8d865cb1c1e51a534a354a47d8d96b577f7e4fd12727eb27bcc65a407d596abf1a17966b501aaa5d48b78bc2baf3cfae11d18d82",
            "file": "src/app/components/toolbar/toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-toolbar",
            "styleUrls": [
                "./toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toolbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-spacer {\r\n    flex: 1 1 auto;\r\n  }",
                    "styleUrl": "./toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-toolbar color=\"primary\" >\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"icon-button with menu icon\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span>My App</span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"icon-button with heart icon\">\r\n      <mat-icon>favorite</mat-icon>\r\n    </button>\r\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\r\n      <mat-icon>share</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n\r\n\r\n\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-da5c4babb09f3b4db7de742c4d09c1f52f3882f1df58ab224ccbd03c1b3bf0ce588fa235ca42307fc22df850509a328e2ab682f90c36a8fce157b3cab2b30094",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { MaterialModule } from './material.module';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\r\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\r\nimport { MatAutocompleteComponent } from './components/mat-autocomplete/mat-autocomplete.component';\r\nimport { MatInputComponent } from './components/mat-input/mat-input.component';\r\nimport { MatButtonsComponent } from './components/mat-buttons/mat-buttons.component';\r\nimport { MatSpinnerComponent } from './components/mat-spinner/mat-spinner.component';\r\nimport { MatBagdeComponent } from './components/mat-bagde/mat-bagde.component';\r\nimport { MatProgressBarComponent } from './components/mat-progress-bar/mat-progress-bar.component';\r\nimport { MatRadioButtonsComponent } from './components/mat-radio-buttons/mat-radio-buttons.component';\r\nimport { MatChipsComponent } from './components/mat-chips/mat-chips.component';\r\nimport { MatDataPickerComponent } from './components/mat-data-picker/mat-data-picker.component';\r\nimport { MatStepperComponent } from './components/mat-stepper/mat-stepper.component';\r\nimport { MatTabsComponent } from './components/mat-tabs/mat-tabs.component';\r\nimport { MatSliderComponent } from './components/mat-slider/mat-slider.component';\r\nimport { MatSlideToggleComponent } from './components/mat-slide-toggle/mat-slide-toggle.component';\r\nimport { SizeDirective } from './directivas/size.directive';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatTableModule} from '@angular/material/table';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SizeDirective,\r\n    ToolbarComponent,\r\n    CheckboxComponent,\r\n    MatAutocompleteComponent,\r\n    MatInputComponent,\r\n    MatButtonsComponent,\r\n    MatSpinnerComponent,\r\n    MatBagdeComponent,\r\n    MatProgressBarComponent,\r\n    MatRadioButtonsComponent,\r\n    MatChipsComponent,\r\n    MatDataPickerComponent,\r\n    MatStepperComponent,\r\n    MatTabsComponent,\r\n    MatSliderComponent,\r\n    MatSlideToggleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    MatDividerModule,\r\n    MatTableModule\r\n  ],\r\n  providers: [{ provide: MAT_SNACK_BAR_DATA, useValue: {} }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "MatAutocompleteComponent"
                        },
                        {
                            "name": "MatBagdeComponent"
                        },
                        {
                            "name": "MatButtonsComponent"
                        },
                        {
                            "name": "MatChipsComponent"
                        },
                        {
                            "name": "MatDataPickerComponent"
                        },
                        {
                            "name": "MatInputComponent"
                        },
                        {
                            "name": "MatProgressBarComponent"
                        },
                        {
                            "name": "MatRadioButtonsComponent"
                        },
                        {
                            "name": "MatSlideToggleComponent"
                        },
                        {
                            "name": "MatSliderComponent"
                        },
                        {
                            "name": "MatSpinnerComponent"
                        },
                        {
                            "name": "MatStepperComponent"
                        },
                        {
                            "name": "MatTabsComponent"
                        },
                        {
                            "name": "SizeDirective"
                        },
                        {
                            "name": "ToolbarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-42fa8db163a7a8fb562a2965e7e64957eea821fd04e59c60cfbe084d6ec9520810cab5099834c905daf99d3502dda6745eec0738b2749bb9e8f6b0d0713c974d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule, Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { MatIconModule                  } from '@angular/material/icon';\r\nimport { MatToolbarModule               } from '@angular/material/toolbar';\r\nimport { MatButtonModule                } from '@angular/material/button';\r\nimport { MatBadgeModule                 } from '@angular/material/badge';\r\nimport { MatCheckboxModule              } from '@angular/material/checkbox';\r\nimport { MatRadioModule                 } from '@angular/material/radio';\r\nimport { MatChipsModule                 } from '@angular/material/chips';\r\nimport { MatAutocompleteModule          } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule             } from '@angular/material/form-field';\r\nimport { MatInputModule                 } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule       } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule           } from '@angular/material/progress-bar';\r\nimport { MatDatepickerModule            } from '@angular/material/datepicker';\r\nimport { MatStepperModule               } from '@angular/material/stepper';\r\nimport { MatTabsModule                  } from '@angular/material/tabs';\r\nimport { MatSliderModule                } from '@angular/material/slider';\r\nimport { MatSlideToggleModule           } from '@angular/material/slide-toggle';\r\n\r\n\r\nconst component = [\r\n  CommonModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatButtonModule,\r\n  MatBadgeModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatDatepickerModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    component\r\n  ],\r\n  exports: [\r\n    component\r\n  ],\r\n})\r\nexport class MaterialModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "component",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/material.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  CommonModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatButtonModule,\r\n  MatBadgeModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatDatepickerModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule\r\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "matChip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/mat-chips/matChips.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MatChip | any",
                "defaultValue": "{\r\n    title: 'mat-chips',\r\n    done: false\r\n\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/material.module.ts": [
                {
                    "name": "component",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/material.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  CommonModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatButtonModule,\r\n  MatBadgeModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule,\r\n  MatChipsModule,\r\n  MatAutocompleteModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatDatepickerModule,\r\n  MatStepperModule,\r\n  MatTabsModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule\r\n]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/components/mat-chips/matChips.component.stories.ts": [
                {
                    "name": "matChip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/mat-chips/matChips.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatChip | any",
                    "defaultValue": "{\r\n    title: 'mat-chips',\r\n    done: false\r\n\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Transaction",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-autocomplete/mat-autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatAutocompleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-bagde/mat-bagde.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatBagdeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-buttons/mat-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chips/mat-chips.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatChipsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chips/mat-chips.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MatChip",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-chips/matChips.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "matChip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-data-picker/mat-data-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatDataPickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-input/mat-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-progress-bar/mat-progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-radio-buttons/mat-radio-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatRadioButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-slide-toggle/mat-slide-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatSlideToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-slider/mat-slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatSliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-spinner/mat-spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatSpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-stepper/mat-stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatStepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mat-tabs/mat-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MatTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toolbar/toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/directivas/size.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SizeDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/material.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "component",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            }
        ]
    }
}